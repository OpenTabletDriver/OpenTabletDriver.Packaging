#!/usr/bin/env bash
SCRIPT_DIR=$(realpath $(dirname ${BASH_SOURCE[0]}))
[ ! -d "${SCRIPT_DIR}" ] && exit 100;

source "${SCRIPT_DIR}/../base"

# Package
PKG_DEB_FILE="${SCRIPT_DIR}/OpenTabletDriver.deb"

# Output

clean() {
  clean_target "${PKG_DEB_FILE}" "Cleaning up existing builds..."
  rm -rf ${SCRIPT_DIR}/opentabletdriver-* ${SCRIPT_DIR}/opentabletdriver_*
}

prepare() {
  pushd "${SCRIPT_DIR}"
  cp -rv "${SRC_DIR}" opentabletdriver-${PKG_VERSION}
  cp -rv debian opentabletdriver-${PKG_VERSION}/
  cp -rv "${ROOT_DIR}/Common" opentabletdriver-${PKG_VERSION}/
  cat <<EOF > opentabletdriver-${PKG_VERSION}/debian/changelog
opentabletdriver (${PKG_VERSION}) UNRELEASED; urgency=low

  * New version: ${PKG_VERSION}

 -- InfinityGhost <infinityghostgit@gmail.com>  `LANG=C date +"%a, %d %b %Y %X %z"`
 
EOF
  popd
}

package() {
  create_debpkg "${PKG_DEB_FILE}"
  print "Packaging complete."
}

create_debpkg () {
  print "Packaging 'OpenTabletDriver.deb'..."
  pushd "${SCRIPT_DIR}"
  pushd "opentabletdriver-${PKG_VERSION}"
  dpkg-buildpackage -b
  popd
  mv "opentabletdriver_${PKG_VERSION}_amd64.deb" "${1}"
  popd
}

case $1 in
    "clean") clean ;;
    "prepare") prepare ;;
    "build") build ;;
    "package") package ;;
    *)
        clean
        prepare
        build
        package
    ;;
esac
