#!/usr/bin/env bash

# Build arguments
FRAMEWORK="net5"

# Output stylization
RESET="\e[39m"
ACCENT="\e[96m"

# Working directories
ROOT_DIR=$(readlink -f $(dirname ${BASH_SOURCE[0]}))

# Repositories
REPO=("https://github.com/InfinityGhost/OpenTabletDriver" "$(readlink -f "${ROOT_DIR}/src/OpenTabletDriver")")
SRC_DIR="${REPO[1]}"
SRC_DIR_CONFIGURATIONS="${SRC_DIR}/OpenTabletDriver.Configurations/Configurations"

# Linux Packaging
LINUX_COMMON_FILES="${ROOT_DIR}/Common/Linux"

print() {
  printf "${ACCENT}$@${RESET}\n"
}

get_group() {
  if [[ "$1" =~ $2 ]]; then
    echo ${BASH_REMATCH[$3]}
  fi
}

clone_repo() {
  args=("$@")
  if [ "${#args[@]}" -eq "2" ]; then
    url="${args[0]}"
    dir="${args[1]}"
    if [ ! -e "$dir" ]; then
        git clone "$url" "$dir"
    fi
  else
    printf "${ACCENT_COLOR}Invalid clone arguments. ($@)${DEFAULT_COLOR}\n"
    exit 1
  fi;
}

prepare() {
  clone_repo ${REPO[@]}
}

regex_edit() {
  [ "$#" -ne 3 ] && exit 200
  [ ! -f "${3}" ] && exit 201

  sed -i "s/${1}/${2}/g" "${3}"
}

create_tarball() {
  [ "$#" -ne 2 ] && exit 210

  print "Creating '${2}' from '${1}'"
  cd $(dirname "${2}")
  tar -zcvf "${2}" "$(basename ${1})"
}

generate_rules() {
  [ "$#" -ne 2 ] && exit 220
  [ ! -d "${1}" ] && exit 221

  print "Generating udev rules..."
	"${SRC_DIR}/generate-rules.sh" -v "${1}" "${2}"
}

install_common_linux_files() {
  print "Copying common files to ${1}..."
  cp -vr ${LINUX_COMMON_FILES}/* "${1}"

  print "Copying and compressing a man page..."
  mkdir -p "${1}/usr/share/man/man8"
  gzip -c "${SRC_DIR}/docs/manpages/opentabletdriver.8" > "${1}/usr/share/man/man8/opentabletdriver.8.gz"

  print "Copying assets to ${1}..."
  mkdir -p "${1}/usr/share/pixmaps"
  cp -v ${SRC_DIR}/OpenTabletDriver.UX/Assets/* "${1}/usr/share/pixmaps"

  mkdir -p "${1}/usr/lib/udev/rules.d"
  generate_rules "${SRC_DIR_CONFIGURATIONS}" "${1}/usr/lib/udev/rules.d/99-opentabletdriver.rules"

  print "Updating version in desktop file"
  PKG_VERSION=$(get_group "$(cat ${SRC_DIR}/OpenTabletDriver/OpenTabletDriver.csproj)" '<VersionPrefix>(.+?)<\/VersionPrefix>' 1)
  regex_edit "Version=.\+$" "Version=${PKG_VERSION}" "${1}/usr/share/applications/OpenTabletDriver.desktop"
}

clean_target() {
  [ "$#" -ne 2 ] && exit 230
  
  if [ -e "${1}" ]; then
    print "${2}"
    if [ -f "${1}" ]; then 
      rm -vf "${1}"
    elif [ -d "${1}" ]; then
      rm -vrf "${1}"
    fi
  fi
}

clean_debug() {
  [ "$#" -ne 1 ] && exit 240
  [ ! -d "${1}" ] && exit 241

  print "Removing all debug files... (.pdb)"
  find "${1}" -name "*.pdb" -type f -exec rm {} ';'
}